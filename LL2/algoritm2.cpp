void selectionSort(std::vector<Item>& data) {    int comparisons = 0;    int swaps = 0;    auto start = std::chrono::high_resolution_clock::now();    for (int i = 0; i < data.size() - 1; ++i) {        int minIndex = i;        for (int j = i + 1; j < data.size(); ++j) {            if (data[j].key < data[minIndex].key) {                minIndex = j;            }            ++comparisons;        }        if (minIndex != i) {            std::swap(data[i], data[minIndex]);            ++swaps;        }    }    auto end = std::chrono::high_resolution_clock::now();    auto duration = std::chrono::duration_cast<std::chrono::microseconds>(end - start);    std::cout << "Selection Sort:" << std::endl;    std::cout << "Theoretical complexity: O(n^2)" << std::endl;    std::cout << "Number of comparisons: " << comparisons << std::endl;    std::cout << "Number of swaps: " << swaps << std::endl;    std::cout << "Time taken: " << duration.count() << " microseconds" << std::endl;}